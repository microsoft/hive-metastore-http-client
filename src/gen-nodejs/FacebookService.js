//
// Autogenerated by Thrift Compiler (0.13.0)
//
// DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
//
"use strict";

var thrift = require('thrift');
var Thrift = thrift.Thrift;
var Q = thrift.Q;
var Int64 = require('node-int64');


var ttypes = require('./fb303_types');
//HELPER FUNCTIONS AND STRUCTURES

var FacebookService_getName_args = function(args) {
};
FacebookService_getName_args.prototype = {};
FacebookService_getName_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    input.skip(ftype);
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

FacebookService_getName_args.prototype.write = function(output) {
  output.writeStructBegin('FacebookService_getName_args');
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var FacebookService_getName_result = function(args) {
  this.success = null;
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = args.success;
    }
  }
};
FacebookService_getName_result.prototype = {};
FacebookService_getName_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 0:
      if (ftype == Thrift.Type.STRING) {
        this.success = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

FacebookService_getName_result.prototype.write = function(output) {
  output.writeStructBegin('FacebookService_getName_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRING, 0);
    output.writeString(this.success);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var FacebookService_getVersion_args = function(args) {
};
FacebookService_getVersion_args.prototype = {};
FacebookService_getVersion_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    input.skip(ftype);
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

FacebookService_getVersion_args.prototype.write = function(output) {
  output.writeStructBegin('FacebookService_getVersion_args');
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var FacebookService_getVersion_result = function(args) {
  this.success = null;
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = args.success;
    }
  }
};
FacebookService_getVersion_result.prototype = {};
FacebookService_getVersion_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 0:
      if (ftype == Thrift.Type.STRING) {
        this.success = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

FacebookService_getVersion_result.prototype.write = function(output) {
  output.writeStructBegin('FacebookService_getVersion_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRING, 0);
    output.writeString(this.success);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var FacebookService_getStatus_args = function(args) {
};
FacebookService_getStatus_args.prototype = {};
FacebookService_getStatus_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    input.skip(ftype);
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

FacebookService_getStatus_args.prototype.write = function(output) {
  output.writeStructBegin('FacebookService_getStatus_args');
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var FacebookService_getStatus_result = function(args) {
  this.success = null;
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = args.success;
    }
  }
};
FacebookService_getStatus_result.prototype = {};
FacebookService_getStatus_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 0:
      if (ftype == Thrift.Type.I32) {
        this.success = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

FacebookService_getStatus_result.prototype.write = function(output) {
  output.writeStructBegin('FacebookService_getStatus_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.I32, 0);
    output.writeI32(this.success);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var FacebookService_getStatusDetails_args = function(args) {
};
FacebookService_getStatusDetails_args.prototype = {};
FacebookService_getStatusDetails_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    input.skip(ftype);
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

FacebookService_getStatusDetails_args.prototype.write = function(output) {
  output.writeStructBegin('FacebookService_getStatusDetails_args');
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var FacebookService_getStatusDetails_result = function(args) {
  this.success = null;
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = args.success;
    }
  }
};
FacebookService_getStatusDetails_result.prototype = {};
FacebookService_getStatusDetails_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 0:
      if (ftype == Thrift.Type.STRING) {
        this.success = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

FacebookService_getStatusDetails_result.prototype.write = function(output) {
  output.writeStructBegin('FacebookService_getStatusDetails_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRING, 0);
    output.writeString(this.success);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var FacebookService_getCounters_args = function(args) {
};
FacebookService_getCounters_args.prototype = {};
FacebookService_getCounters_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    input.skip(ftype);
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

FacebookService_getCounters_args.prototype.write = function(output) {
  output.writeStructBegin('FacebookService_getCounters_args');
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var FacebookService_getCounters_result = function(args) {
  this.success = null;
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = Thrift.copyMap(args.success, [null]);
    }
  }
};
FacebookService_getCounters_result.prototype = {};
FacebookService_getCounters_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 0:
      if (ftype == Thrift.Type.MAP) {
        this.success = {};
        var _rtmp31 = input.readMapBegin();
        var _size0 = _rtmp31.size || 0;
        for (var _i2 = 0; _i2 < _size0; ++_i2) {
          var key3 = null;
          var val4 = null;
          key3 = input.readString();
          val4 = input.readI64();
          this.success[key3] = val4;
        }
        input.readMapEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

FacebookService_getCounters_result.prototype.write = function(output) {
  output.writeStructBegin('FacebookService_getCounters_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.MAP, 0);
    output.writeMapBegin(Thrift.Type.STRING, Thrift.Type.I64, Thrift.objectLength(this.success));
    for (var kiter5 in this.success) {
      if (this.success.hasOwnProperty(kiter5)) {
        var viter6 = this.success[kiter5];
        output.writeString(kiter5);
        output.writeI64(viter6);
      }
    }
    output.writeMapEnd();
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var FacebookService_getCounter_args = function(args) {
  this.key = null;
  if (args) {
    if (args.key !== undefined && args.key !== null) {
      this.key = args.key;
    }
  }
};
FacebookService_getCounter_args.prototype = {};
FacebookService_getCounter_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.STRING) {
        this.key = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

FacebookService_getCounter_args.prototype.write = function(output) {
  output.writeStructBegin('FacebookService_getCounter_args');
  if (this.key !== null && this.key !== undefined) {
    output.writeFieldBegin('key', Thrift.Type.STRING, 1);
    output.writeString(this.key);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var FacebookService_getCounter_result = function(args) {
  this.success = null;
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = args.success;
    }
  }
};
FacebookService_getCounter_result.prototype = {};
FacebookService_getCounter_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 0:
      if (ftype == Thrift.Type.I64) {
        this.success = input.readI64();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

FacebookService_getCounter_result.prototype.write = function(output) {
  output.writeStructBegin('FacebookService_getCounter_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.I64, 0);
    output.writeI64(this.success);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var FacebookService_setOption_args = function(args) {
  this.key = null;
  this.value = null;
  if (args) {
    if (args.key !== undefined && args.key !== null) {
      this.key = args.key;
    }
    if (args.value !== undefined && args.value !== null) {
      this.value = args.value;
    }
  }
};
FacebookService_setOption_args.prototype = {};
FacebookService_setOption_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.STRING) {
        this.key = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRING) {
        this.value = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

FacebookService_setOption_args.prototype.write = function(output) {
  output.writeStructBegin('FacebookService_setOption_args');
  if (this.key !== null && this.key !== undefined) {
    output.writeFieldBegin('key', Thrift.Type.STRING, 1);
    output.writeString(this.key);
    output.writeFieldEnd();
  }
  if (this.value !== null && this.value !== undefined) {
    output.writeFieldBegin('value', Thrift.Type.STRING, 2);
    output.writeString(this.value);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var FacebookService_setOption_result = function(args) {
};
FacebookService_setOption_result.prototype = {};
FacebookService_setOption_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    input.skip(ftype);
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

FacebookService_setOption_result.prototype.write = function(output) {
  output.writeStructBegin('FacebookService_setOption_result');
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var FacebookService_getOption_args = function(args) {
  this.key = null;
  if (args) {
    if (args.key !== undefined && args.key !== null) {
      this.key = args.key;
    }
  }
};
FacebookService_getOption_args.prototype = {};
FacebookService_getOption_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.STRING) {
        this.key = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

FacebookService_getOption_args.prototype.write = function(output) {
  output.writeStructBegin('FacebookService_getOption_args');
  if (this.key !== null && this.key !== undefined) {
    output.writeFieldBegin('key', Thrift.Type.STRING, 1);
    output.writeString(this.key);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var FacebookService_getOption_result = function(args) {
  this.success = null;
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = args.success;
    }
  }
};
FacebookService_getOption_result.prototype = {};
FacebookService_getOption_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 0:
      if (ftype == Thrift.Type.STRING) {
        this.success = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

FacebookService_getOption_result.prototype.write = function(output) {
  output.writeStructBegin('FacebookService_getOption_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRING, 0);
    output.writeString(this.success);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var FacebookService_getOptions_args = function(args) {
};
FacebookService_getOptions_args.prototype = {};
FacebookService_getOptions_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    input.skip(ftype);
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

FacebookService_getOptions_args.prototype.write = function(output) {
  output.writeStructBegin('FacebookService_getOptions_args');
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var FacebookService_getOptions_result = function(args) {
  this.success = null;
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = Thrift.copyMap(args.success, [null]);
    }
  }
};
FacebookService_getOptions_result.prototype = {};
FacebookService_getOptions_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 0:
      if (ftype == Thrift.Type.MAP) {
        this.success = {};
        var _rtmp38 = input.readMapBegin();
        var _size7 = _rtmp38.size || 0;
        for (var _i9 = 0; _i9 < _size7; ++_i9) {
          var key10 = null;
          var val11 = null;
          key10 = input.readString();
          val11 = input.readString();
          this.success[key10] = val11;
        }
        input.readMapEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

FacebookService_getOptions_result.prototype.write = function(output) {
  output.writeStructBegin('FacebookService_getOptions_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.MAP, 0);
    output.writeMapBegin(Thrift.Type.STRING, Thrift.Type.STRING, Thrift.objectLength(this.success));
    for (var kiter12 in this.success) {
      if (this.success.hasOwnProperty(kiter12)) {
        var viter13 = this.success[kiter12];
        output.writeString(kiter12);
        output.writeString(viter13);
      }
    }
    output.writeMapEnd();
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var FacebookService_getCpuProfile_args = function(args) {
  this.profileDurationInSec = null;
  if (args) {
    if (args.profileDurationInSec !== undefined && args.profileDurationInSec !== null) {
      this.profileDurationInSec = args.profileDurationInSec;
    }
  }
};
FacebookService_getCpuProfile_args.prototype = {};
FacebookService_getCpuProfile_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.I32) {
        this.profileDurationInSec = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

FacebookService_getCpuProfile_args.prototype.write = function(output) {
  output.writeStructBegin('FacebookService_getCpuProfile_args');
  if (this.profileDurationInSec !== null && this.profileDurationInSec !== undefined) {
    output.writeFieldBegin('profileDurationInSec', Thrift.Type.I32, 1);
    output.writeI32(this.profileDurationInSec);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var FacebookService_getCpuProfile_result = function(args) {
  this.success = null;
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = args.success;
    }
  }
};
FacebookService_getCpuProfile_result.prototype = {};
FacebookService_getCpuProfile_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 0:
      if (ftype == Thrift.Type.STRING) {
        this.success = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

FacebookService_getCpuProfile_result.prototype.write = function(output) {
  output.writeStructBegin('FacebookService_getCpuProfile_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRING, 0);
    output.writeString(this.success);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var FacebookService_aliveSince_args = function(args) {
};
FacebookService_aliveSince_args.prototype = {};
FacebookService_aliveSince_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    input.skip(ftype);
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

FacebookService_aliveSince_args.prototype.write = function(output) {
  output.writeStructBegin('FacebookService_aliveSince_args');
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var FacebookService_aliveSince_result = function(args) {
  this.success = null;
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = args.success;
    }
  }
};
FacebookService_aliveSince_result.prototype = {};
FacebookService_aliveSince_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 0:
      if (ftype == Thrift.Type.I64) {
        this.success = input.readI64();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

FacebookService_aliveSince_result.prototype.write = function(output) {
  output.writeStructBegin('FacebookService_aliveSince_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.I64, 0);
    output.writeI64(this.success);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var FacebookService_reinitialize_args = function(args) {
};
FacebookService_reinitialize_args.prototype = {};
FacebookService_reinitialize_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    input.skip(ftype);
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

FacebookService_reinitialize_args.prototype.write = function(output) {
  output.writeStructBegin('FacebookService_reinitialize_args');
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var FacebookService_reinitialize_result = function(args) {
};
FacebookService_reinitialize_result.prototype = {};
FacebookService_reinitialize_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    input.skip(ftype);
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

FacebookService_reinitialize_result.prototype.write = function(output) {
  output.writeStructBegin('FacebookService_reinitialize_result');
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var FacebookService_shutdown_args = function(args) {
};
FacebookService_shutdown_args.prototype = {};
FacebookService_shutdown_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    input.skip(ftype);
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

FacebookService_shutdown_args.prototype.write = function(output) {
  output.writeStructBegin('FacebookService_shutdown_args');
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var FacebookService_shutdown_result = function(args) {
};
FacebookService_shutdown_result.prototype = {};
FacebookService_shutdown_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    input.skip(ftype);
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

FacebookService_shutdown_result.prototype.write = function(output) {
  output.writeStructBegin('FacebookService_shutdown_result');
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var FacebookServiceClient = exports.Client = function(output, pClass) {
  this.output = output;
  this.pClass = pClass;
  this._seqid = 0;
  this._reqs = {};
};
FacebookServiceClient.prototype = {};
FacebookServiceClient.prototype.seqid = function() { return this._seqid; };
FacebookServiceClient.prototype.new_seqid = function() { return this._seqid += 1; };

FacebookServiceClient.prototype.getName = function(callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_getName();
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_getName();
  }
};

FacebookServiceClient.prototype.send_getName = function() {
  var output = new this.pClass(this.output);
  var args = new FacebookService_getName_args();
  try {
    output.writeMessageBegin('getName', Thrift.MessageType.CALL, this.seqid());
    args.write(output);
    output.writeMessageEnd();
    return this.output.flush();
  }
  catch (e) {
    delete this._reqs[this.seqid()];
    if (typeof output.reset === 'function') {
      output.reset();
    }
    throw e;
  }
};

FacebookServiceClient.prototype.recv_getName = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new FacebookService_getName_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('getName failed: unknown result');
};

FacebookServiceClient.prototype.getVersion = function(callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_getVersion();
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_getVersion();
  }
};

FacebookServiceClient.prototype.send_getVersion = function() {
  var output = new this.pClass(this.output);
  var args = new FacebookService_getVersion_args();
  try {
    output.writeMessageBegin('getVersion', Thrift.MessageType.CALL, this.seqid());
    args.write(output);
    output.writeMessageEnd();
    return this.output.flush();
  }
  catch (e) {
    delete this._reqs[this.seqid()];
    if (typeof output.reset === 'function') {
      output.reset();
    }
    throw e;
  }
};

FacebookServiceClient.prototype.recv_getVersion = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new FacebookService_getVersion_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('getVersion failed: unknown result');
};

FacebookServiceClient.prototype.getStatus = function(callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_getStatus();
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_getStatus();
  }
};

FacebookServiceClient.prototype.send_getStatus = function() {
  var output = new this.pClass(this.output);
  var args = new FacebookService_getStatus_args();
  try {
    output.writeMessageBegin('getStatus', Thrift.MessageType.CALL, this.seqid());
    args.write(output);
    output.writeMessageEnd();
    return this.output.flush();
  }
  catch (e) {
    delete this._reqs[this.seqid()];
    if (typeof output.reset === 'function') {
      output.reset();
    }
    throw e;
  }
};

FacebookServiceClient.prototype.recv_getStatus = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new FacebookService_getStatus_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('getStatus failed: unknown result');
};

FacebookServiceClient.prototype.getStatusDetails = function(callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_getStatusDetails();
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_getStatusDetails();
  }
};

FacebookServiceClient.prototype.send_getStatusDetails = function() {
  var output = new this.pClass(this.output);
  var args = new FacebookService_getStatusDetails_args();
  try {
    output.writeMessageBegin('getStatusDetails', Thrift.MessageType.CALL, this.seqid());
    args.write(output);
    output.writeMessageEnd();
    return this.output.flush();
  }
  catch (e) {
    delete this._reqs[this.seqid()];
    if (typeof output.reset === 'function') {
      output.reset();
    }
    throw e;
  }
};

FacebookServiceClient.prototype.recv_getStatusDetails = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new FacebookService_getStatusDetails_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('getStatusDetails failed: unknown result');
};

FacebookServiceClient.prototype.getCounters = function(callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_getCounters();
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_getCounters();
  }
};

FacebookServiceClient.prototype.send_getCounters = function() {
  var output = new this.pClass(this.output);
  var args = new FacebookService_getCounters_args();
  try {
    output.writeMessageBegin('getCounters', Thrift.MessageType.CALL, this.seqid());
    args.write(output);
    output.writeMessageEnd();
    return this.output.flush();
  }
  catch (e) {
    delete this._reqs[this.seqid()];
    if (typeof output.reset === 'function') {
      output.reset();
    }
    throw e;
  }
};

FacebookServiceClient.prototype.recv_getCounters = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new FacebookService_getCounters_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('getCounters failed: unknown result');
};

FacebookServiceClient.prototype.getCounter = function(key, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_getCounter(key);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_getCounter(key);
  }
};

FacebookServiceClient.prototype.send_getCounter = function(key) {
  var output = new this.pClass(this.output);
  var params = {
    key: key
  };
  var args = new FacebookService_getCounter_args(params);
  try {
    output.writeMessageBegin('getCounter', Thrift.MessageType.CALL, this.seqid());
    args.write(output);
    output.writeMessageEnd();
    return this.output.flush();
  }
  catch (e) {
    delete this._reqs[this.seqid()];
    if (typeof output.reset === 'function') {
      output.reset();
    }
    throw e;
  }
};

FacebookServiceClient.prototype.recv_getCounter = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new FacebookService_getCounter_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('getCounter failed: unknown result');
};

FacebookServiceClient.prototype.setOption = function(key, value, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_setOption(key, value);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_setOption(key, value);
  }
};

FacebookServiceClient.prototype.send_setOption = function(key, value) {
  var output = new this.pClass(this.output);
  var params = {
    key: key,
    value: value
  };
  var args = new FacebookService_setOption_args(params);
  try {
    output.writeMessageBegin('setOption', Thrift.MessageType.CALL, this.seqid());
    args.write(output);
    output.writeMessageEnd();
    return this.output.flush();
  }
  catch (e) {
    delete this._reqs[this.seqid()];
    if (typeof output.reset === 'function') {
      output.reset();
    }
    throw e;
  }
};

FacebookServiceClient.prototype.recv_setOption = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new FacebookService_setOption_result();
  result.read(input);
  input.readMessageEnd();

  callback(null);
};

FacebookServiceClient.prototype.getOption = function(key, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_getOption(key);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_getOption(key);
  }
};

FacebookServiceClient.prototype.send_getOption = function(key) {
  var output = new this.pClass(this.output);
  var params = {
    key: key
  };
  var args = new FacebookService_getOption_args(params);
  try {
    output.writeMessageBegin('getOption', Thrift.MessageType.CALL, this.seqid());
    args.write(output);
    output.writeMessageEnd();
    return this.output.flush();
  }
  catch (e) {
    delete this._reqs[this.seqid()];
    if (typeof output.reset === 'function') {
      output.reset();
    }
    throw e;
  }
};

FacebookServiceClient.prototype.recv_getOption = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new FacebookService_getOption_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('getOption failed: unknown result');
};

FacebookServiceClient.prototype.getOptions = function(callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_getOptions();
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_getOptions();
  }
};

FacebookServiceClient.prototype.send_getOptions = function() {
  var output = new this.pClass(this.output);
  var args = new FacebookService_getOptions_args();
  try {
    output.writeMessageBegin('getOptions', Thrift.MessageType.CALL, this.seqid());
    args.write(output);
    output.writeMessageEnd();
    return this.output.flush();
  }
  catch (e) {
    delete this._reqs[this.seqid()];
    if (typeof output.reset === 'function') {
      output.reset();
    }
    throw e;
  }
};

FacebookServiceClient.prototype.recv_getOptions = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new FacebookService_getOptions_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('getOptions failed: unknown result');
};

FacebookServiceClient.prototype.getCpuProfile = function(profileDurationInSec, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_getCpuProfile(profileDurationInSec);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_getCpuProfile(profileDurationInSec);
  }
};

FacebookServiceClient.prototype.send_getCpuProfile = function(profileDurationInSec) {
  var output = new this.pClass(this.output);
  var params = {
    profileDurationInSec: profileDurationInSec
  };
  var args = new FacebookService_getCpuProfile_args(params);
  try {
    output.writeMessageBegin('getCpuProfile', Thrift.MessageType.CALL, this.seqid());
    args.write(output);
    output.writeMessageEnd();
    return this.output.flush();
  }
  catch (e) {
    delete this._reqs[this.seqid()];
    if (typeof output.reset === 'function') {
      output.reset();
    }
    throw e;
  }
};

FacebookServiceClient.prototype.recv_getCpuProfile = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new FacebookService_getCpuProfile_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('getCpuProfile failed: unknown result');
};

FacebookServiceClient.prototype.aliveSince = function(callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_aliveSince();
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_aliveSince();
  }
};

FacebookServiceClient.prototype.send_aliveSince = function() {
  var output = new this.pClass(this.output);
  var args = new FacebookService_aliveSince_args();
  try {
    output.writeMessageBegin('aliveSince', Thrift.MessageType.CALL, this.seqid());
    args.write(output);
    output.writeMessageEnd();
    return this.output.flush();
  }
  catch (e) {
    delete this._reqs[this.seqid()];
    if (typeof output.reset === 'function') {
      output.reset();
    }
    throw e;
  }
};

FacebookServiceClient.prototype.recv_aliveSince = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new FacebookService_aliveSince_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('aliveSince failed: unknown result');
};

FacebookServiceClient.prototype.reinitialize = function(callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_reinitialize();
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_reinitialize();
  }
};

FacebookServiceClient.prototype.send_reinitialize = function() {
  var output = new this.pClass(this.output);
  var args = new FacebookService_reinitialize_args();
  try {
    output.writeMessageBegin('reinitialize', Thrift.MessageType.ONEWAY, this.seqid());
    args.write(output);
    output.writeMessageEnd();
    this.output.flush();
    var callback = this._reqs[this.seqid()] || function() {};
    delete this._reqs[this.seqid()];
    callback(null);
  }
  catch (e) {
    delete this._reqs[this.seqid()];
    if (typeof output.reset === 'function') {
      output.reset();
    }
    throw e;
  }
};

FacebookServiceClient.prototype.shutdown = function(callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_shutdown();
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_shutdown();
  }
};

FacebookServiceClient.prototype.send_shutdown = function() {
  var output = new this.pClass(this.output);
  var args = new FacebookService_shutdown_args();
  try {
    output.writeMessageBegin('shutdown', Thrift.MessageType.ONEWAY, this.seqid());
    args.write(output);
    output.writeMessageEnd();
    this.output.flush();
    var callback = this._reqs[this.seqid()] || function() {};
    delete this._reqs[this.seqid()];
    callback(null);
  }
  catch (e) {
    delete this._reqs[this.seqid()];
    if (typeof output.reset === 'function') {
      output.reset();
    }
    throw e;
  }
};
var FacebookServiceProcessor = exports.Processor = function(handler) {
  this._handler = handler;
};
FacebookServiceProcessor.prototype.process = function(input, output) {
  var r = input.readMessageBegin();
  if (this['process_' + r.fname]) {
    return this['process_' + r.fname].call(this, r.rseqid, input, output);
  } else {
    input.skip(Thrift.Type.STRUCT);
    input.readMessageEnd();
    var x = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN_METHOD, 'Unknown function ' + r.fname);
    output.writeMessageBegin(r.fname, Thrift.MessageType.EXCEPTION, r.rseqid);
    x.write(output);
    output.writeMessageEnd();
    output.flush();
  }
};
FacebookServiceProcessor.prototype.process_getName = function(seqid, input, output) {
  var args = new FacebookService_getName_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.getName.length === 0) {
    Q.fcall(this._handler.getName.bind(this._handler)
    ).then(function(result) {
      var result_obj = new FacebookService_getName_result({success: result});
      output.writeMessageBegin("getName", Thrift.MessageType.REPLY, seqid);
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    }).catch(function (err) {
      var result;
      result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
      output.writeMessageBegin("getName", Thrift.MessageType.EXCEPTION, seqid);
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  } else {
    this._handler.getName(function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined')) {
        result_obj = new FacebookService_getName_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("getName", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("getName", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
FacebookServiceProcessor.prototype.process_getVersion = function(seqid, input, output) {
  var args = new FacebookService_getVersion_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.getVersion.length === 0) {
    Q.fcall(this._handler.getVersion.bind(this._handler)
    ).then(function(result) {
      var result_obj = new FacebookService_getVersion_result({success: result});
      output.writeMessageBegin("getVersion", Thrift.MessageType.REPLY, seqid);
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    }).catch(function (err) {
      var result;
      result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
      output.writeMessageBegin("getVersion", Thrift.MessageType.EXCEPTION, seqid);
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  } else {
    this._handler.getVersion(function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined')) {
        result_obj = new FacebookService_getVersion_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("getVersion", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("getVersion", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
FacebookServiceProcessor.prototype.process_getStatus = function(seqid, input, output) {
  var args = new FacebookService_getStatus_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.getStatus.length === 0) {
    Q.fcall(this._handler.getStatus.bind(this._handler)
    ).then(function(result) {
      var result_obj = new FacebookService_getStatus_result({success: result});
      output.writeMessageBegin("getStatus", Thrift.MessageType.REPLY, seqid);
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    }).catch(function (err) {
      var result;
      result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
      output.writeMessageBegin("getStatus", Thrift.MessageType.EXCEPTION, seqid);
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  } else {
    this._handler.getStatus(function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined')) {
        result_obj = new FacebookService_getStatus_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("getStatus", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("getStatus", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
FacebookServiceProcessor.prototype.process_getStatusDetails = function(seqid, input, output) {
  var args = new FacebookService_getStatusDetails_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.getStatusDetails.length === 0) {
    Q.fcall(this._handler.getStatusDetails.bind(this._handler)
    ).then(function(result) {
      var result_obj = new FacebookService_getStatusDetails_result({success: result});
      output.writeMessageBegin("getStatusDetails", Thrift.MessageType.REPLY, seqid);
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    }).catch(function (err) {
      var result;
      result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
      output.writeMessageBegin("getStatusDetails", Thrift.MessageType.EXCEPTION, seqid);
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  } else {
    this._handler.getStatusDetails(function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined')) {
        result_obj = new FacebookService_getStatusDetails_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("getStatusDetails", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("getStatusDetails", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
FacebookServiceProcessor.prototype.process_getCounters = function(seqid, input, output) {
  var args = new FacebookService_getCounters_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.getCounters.length === 0) {
    Q.fcall(this._handler.getCounters.bind(this._handler)
    ).then(function(result) {
      var result_obj = new FacebookService_getCounters_result({success: result});
      output.writeMessageBegin("getCounters", Thrift.MessageType.REPLY, seqid);
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    }).catch(function (err) {
      var result;
      result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
      output.writeMessageBegin("getCounters", Thrift.MessageType.EXCEPTION, seqid);
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  } else {
    this._handler.getCounters(function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined')) {
        result_obj = new FacebookService_getCounters_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("getCounters", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("getCounters", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
FacebookServiceProcessor.prototype.process_getCounter = function(seqid, input, output) {
  var args = new FacebookService_getCounter_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.getCounter.length === 1) {
    Q.fcall(this._handler.getCounter.bind(this._handler),
      args.key
    ).then(function(result) {
      var result_obj = new FacebookService_getCounter_result({success: result});
      output.writeMessageBegin("getCounter", Thrift.MessageType.REPLY, seqid);
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    }).catch(function (err) {
      var result;
      result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
      output.writeMessageBegin("getCounter", Thrift.MessageType.EXCEPTION, seqid);
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  } else {
    this._handler.getCounter(args.key, function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined')) {
        result_obj = new FacebookService_getCounter_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("getCounter", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("getCounter", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
FacebookServiceProcessor.prototype.process_setOption = function(seqid, input, output) {
  var args = new FacebookService_setOption_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.setOption.length === 2) {
    Q.fcall(this._handler.setOption.bind(this._handler),
      args.key,
      args.value
    ).then(function(result) {
      var result_obj = new FacebookService_setOption_result({success: result});
      output.writeMessageBegin("setOption", Thrift.MessageType.REPLY, seqid);
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    }).catch(function (err) {
      var result;
      result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
      output.writeMessageBegin("setOption", Thrift.MessageType.EXCEPTION, seqid);
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  } else {
    this._handler.setOption(args.key, args.value, function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined')) {
        result_obj = new FacebookService_setOption_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("setOption", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("setOption", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
FacebookServiceProcessor.prototype.process_getOption = function(seqid, input, output) {
  var args = new FacebookService_getOption_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.getOption.length === 1) {
    Q.fcall(this._handler.getOption.bind(this._handler),
      args.key
    ).then(function(result) {
      var result_obj = new FacebookService_getOption_result({success: result});
      output.writeMessageBegin("getOption", Thrift.MessageType.REPLY, seqid);
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    }).catch(function (err) {
      var result;
      result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
      output.writeMessageBegin("getOption", Thrift.MessageType.EXCEPTION, seqid);
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  } else {
    this._handler.getOption(args.key, function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined')) {
        result_obj = new FacebookService_getOption_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("getOption", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("getOption", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
FacebookServiceProcessor.prototype.process_getOptions = function(seqid, input, output) {
  var args = new FacebookService_getOptions_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.getOptions.length === 0) {
    Q.fcall(this._handler.getOptions.bind(this._handler)
    ).then(function(result) {
      var result_obj = new FacebookService_getOptions_result({success: result});
      output.writeMessageBegin("getOptions", Thrift.MessageType.REPLY, seqid);
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    }).catch(function (err) {
      var result;
      result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
      output.writeMessageBegin("getOptions", Thrift.MessageType.EXCEPTION, seqid);
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  } else {
    this._handler.getOptions(function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined')) {
        result_obj = new FacebookService_getOptions_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("getOptions", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("getOptions", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
FacebookServiceProcessor.prototype.process_getCpuProfile = function(seqid, input, output) {
  var args = new FacebookService_getCpuProfile_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.getCpuProfile.length === 1) {
    Q.fcall(this._handler.getCpuProfile.bind(this._handler),
      args.profileDurationInSec
    ).then(function(result) {
      var result_obj = new FacebookService_getCpuProfile_result({success: result});
      output.writeMessageBegin("getCpuProfile", Thrift.MessageType.REPLY, seqid);
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    }).catch(function (err) {
      var result;
      result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
      output.writeMessageBegin("getCpuProfile", Thrift.MessageType.EXCEPTION, seqid);
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  } else {
    this._handler.getCpuProfile(args.profileDurationInSec, function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined')) {
        result_obj = new FacebookService_getCpuProfile_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("getCpuProfile", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("getCpuProfile", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
FacebookServiceProcessor.prototype.process_aliveSince = function(seqid, input, output) {
  var args = new FacebookService_aliveSince_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.aliveSince.length === 0) {
    Q.fcall(this._handler.aliveSince.bind(this._handler)
    ).then(function(result) {
      var result_obj = new FacebookService_aliveSince_result({success: result});
      output.writeMessageBegin("aliveSince", Thrift.MessageType.REPLY, seqid);
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    }).catch(function (err) {
      var result;
      result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
      output.writeMessageBegin("aliveSince", Thrift.MessageType.EXCEPTION, seqid);
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  } else {
    this._handler.aliveSince(function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined')) {
        result_obj = new FacebookService_aliveSince_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("aliveSince", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("aliveSince", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
FacebookServiceProcessor.prototype.process_reinitialize = function(seqid, input, output) {
  var args = new FacebookService_reinitialize_args();
  args.read(input);
  input.readMessageEnd();
  this._handler.reinitialize();
};
FacebookServiceProcessor.prototype.process_shutdown = function(seqid, input, output) {
  var args = new FacebookService_shutdown_args();
  args.read(input);
  input.readMessageEnd();
  this._handler.shutdown();
};
